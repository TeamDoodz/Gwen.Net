namespace Gwen.Net.Control;

/// <summary>
/// Progress bar.
/// </summary>
[Xml.XmlControl]
public class ProgressBar : Label {
	private bool horizontal;
	private bool autoLabel;
	private float progress;

	/// <summary>
	/// Determines whether the control is horizontal.
	/// </summary>
	[Xml.XmlProperty]
	public bool IsHorizontal { get { return horizontal; } set { horizontal = value; } }

	/// <summary>
	/// Progress value (0-1).
	/// </summary>
	[Xml.XmlProperty]
	public float Value {
		get { return progress; }
		set {
			if(value < 0)
				value = 0;
			if(value > 1)
				value = 1;

			progress = value;
			if(autoLabel) {
				int displayVal = (int)(progress * 100);
				Text = displayVal.ToString() + "%";
			}
		}
	}

	/// <summary>
	/// Determines whether the label text is autogenerated from value.
	/// </summary>
	[Xml.XmlProperty]
	public bool AutoLabel { get { return autoLabel; } set { autoLabel = value; } }

	/// <summary>
	/// Initializes a new instance of the <see cref="ProgressBar"/> class.
	/// </summary>
	/// <param name="parent">Parent control.</param>
	public ProgressBar(ControlBase? parent)
		: base(parent) {
		SetSize(128, 32);
		TextPadding = Padding.Three;
		IsHorizontal = true;

		AutoSizeToContents = false;
		Alignment = Alignment.Center;
		progress = 0;
		autoLabel = true;
	}

	/// <summary>
	/// Renders the control using specified skin.
	/// </summary>
	/// <param name="skin">Skin to use.</param>
	protected override void Render(Skin.SkinBase skin) {
		skin.DrawProgressBar(this, horizontal, progress);
	}
}